name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. 최신 저장소 체크아웃
    - name: Checkout source code
      uses: actions/checkout@v3

    # 2. JDK 17 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        cache: gradle

    # 3. Gradlew 실행 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # 4. Gradle 빌드
    - name: Build with Gradle
      run: ./gradlew build

    # 5. Docker 로그인 및 이미지 빌드/푸시
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/backendroadmap:latest

    # 6&7. 타임스탬프 생성 및 변환
    - name: Generate timestamp
      id: timestamp
      run: |
        echo "timestamp=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

    # 8. Elastic Beanstalk 배포
    - name: Generate deployment package
      run: |
        mkdir -p deploy
        cp build/libs/*.jar deploy/application.jar
        cp Procfile deploy/Procfile
        cp -r .ebextensions deploy/.ebextensions
        cp Dockerrun.aws.json deploy/
        cd deploy && zip -r deploy.zip .

    - name: Deploy to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ secrets.EB_APPLICATION_NAME }}
        environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
        version_label: ${{ steps.timestamp.outputs.timestamp }}
        region: ${{ secrets.AWS_REGION }}
        deployment_package: deploy/deploy.zip
        wait_for_deployment: true

    - name: Print deployment status
      run: echo "Deployment completed with version ${{ steps.timestamp.outputs.timestamp }}"