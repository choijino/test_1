name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout source code
    - name: Checkout source code
      uses: actions/checkout@v3

    # 2. Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        cache: gradle

    # 3. Grant execute permission for gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # 4. Build with Gradle
    - name: Build with Gradle
      run: ./gradlew build

    # 5. Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Docker Hub login
    - name: Login to DockerHub
      run: |
        echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin || {
          echo "Docker login failed. Checking credentials..."
          echo "Username exists: ${{ secrets.DOCKERHUB_USERNAME != '' }}"
          echo "Token exists: ${{ secrets.DOCKERHUB_TOKEN != '' }}"
          exit 1
        }

    # Build and push
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./src/dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/backendroadmap:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/backendroadmap:${{ github.sha }}

    # 6. Generate timestamp
    - name: Generate timestamp
      id: timestamp
      run: |
        echo "timestamp=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

    # 7. Generate deployment package
    - name: Generate deployment package
      run: |
        mkdir -p deploy
        cp build/libs/*.jar deploy/application.jar
        cp Procfile deploy/Procfile
        cp -r .ebextensions deploy/.ebextensions
        cp Dockerrun.aws.json deploy/
        cd deploy && zip -r deploy.zip .

    # 8. Deploy to AWS Elastic Beanstalk
    - name: Deploy to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ secrets.EB_APPLICATION_NAME }}
        environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
        version_label: ${{ steps.timestamp.outputs.timestamp }}
        region: ${{ secrets.AWS_REGION }}
        deployment_package: deploy/deploy.zip
        wait_for_deployment: true

    # Print deployment status
    - name: Print deployment status
      run: echo "Deployment completed with version ${{ steps.timestamp.outputs.timestamp }}"